{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server Player Stat server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you have to generate token first to have access to services",
    "version": "1.0.0",
    "title": "Swagger Player Stat",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "player_stat.swagger.io",
  "basePath": "/v2",
  "tags": [
    {
      "name": "Game stat",
      "description": "Get gift from your gaming party",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "player",
      "description": "Operations about player",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/players": {
      "get": {
        "tags": [
          "player"
        ],
        "summary": "Fetch list of players",
        "description": "",
        "operationId": "all",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Error server"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "post": {
        "tags": [
          "player"
        ],
        "summary": "Add a new player",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "description": "Player object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Player"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/api/players/{nickname}": {
      "put": {
        "tags": [
          "player"
        ],
        "summary": "Update an existing player",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "nickname",
            "in": "path",
            "description": "Player information need to be modified",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Player information updated"
          },
          "404": {
            "description": "Player not found"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "get": {
        "tags": [
          "player"
        ],
        "summary": "Retrieve Player by BetOnYou nickname",
        "description": "BetOnYou nickname need to be added",
        "operationId": "retrieve_player",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "nickname",
            "in": "path",
            "description": "nickname need to be considered to get back the player",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "player"
        ],
        "summary": "Deletes a player",
        "operationId": "destroy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "nickname",
            "in": "path",
            "description": "Player information need to be modified",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Player information updated"
          },
          "404": {
            "description": "Player not found"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/api/players/stats/{nickname}": {
      "get": {
        "tags": [
          "player"
        ],
        "summary": "Get player stat from external API",
        "description": "return stats and store on database",
        "operationId": "store_stats",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "nickname",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          },
          "403": {
            "description": "Player stat are not public"
          },
          "404": {
            "description": "nickname not found"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/api/token": {
      "post": {
        "tags": [
          "token"
        ],
        "summary": "generate a token for authorization",
        "description": "",
        "operationId": "generate_token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "payload",
            "schema": {
              "$ref": "#/definitions/Player"
            },
            "in": "body",
            "description": "user email object",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/token"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "token": {
      "type": "basic"
    }
  },
  "definitions": {
    "Player": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "nickname": {
          "type": "string"
        },
        "fornite_nickname": {
          "type": "string"
        },
        "clash_royal_nickname": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "stats": {
          "type": "array",
          "items": {}
        }
      },
      "xml": {
        "name": "Player"
      }
    },
    "token": {
      "type": "string"
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}